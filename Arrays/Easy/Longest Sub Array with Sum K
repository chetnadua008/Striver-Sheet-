//sub array = set of consecutive elements of the array
//sub sequence = set of non consecutive elements of array


//brute force

int lenOfLongestSubarr(vector <int> & arr, int k) {
        int n=arr.size();
        int len=0;
        int sum=0;

        for(int i=0;i<n;i++){
            for(int j=i;j<n;j++){
                sum=0;
                for(int k=i;k<=j;k++)
                    sum+=arr[k];
                
                if(sum==k) len=max(len,j-i+1);
            }
        }
        return len;
    }
Time Complexity: O(N^3)
Space Complexity: O(1)

//optimized brute force

int lenOfLongestSubarr(vector <int> & arr, int k) {
        int n=arr.size();
        int len=0;
        int sum=0;
        for(int i=0;i<n;i++){
            sum=0;
            for(int j=i;j<n;j++){
                sum+=arr[j];
                if(sum==k)
                    len=max(len,j-i+1);
            }
        }
        return len;
    }
Time Complexity: O(N^2)
Space Complexity: O(1)
